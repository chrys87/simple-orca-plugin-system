1. How to write a plugin:

1.1 File name:
the description have to be seperated to the oter parts wtih __-__
the commands, modifier and the key has to be seperated by __+__
structure
<description>__-__[<command>__+__command...][__+__<modifier>__+__<modiier>__+__]<key char>.sh
structure examples:
description__-__<command>__+__control__+__alt__+__<key char>.sh
description__-__<command>__+__<command>__+__shift__+__<key char>.py
description__-__<key char>.py

The file could be any type of script or application. It just have to send to STD out.

1.2 Modifiers / Keys /Commands
1.2.1 Modifiers
you always have to press the orca key.
control= CTRL key
shift = shift key
alt = Alt key
the order of those three modifier keys doesn't matter and they are optional
but if they are exist only a few combinations (predefined by orca) is valid:
Valid modifier combinations:
alt (description__-__alt__+__w.sh)
control (description__-__control__+__w.sh)
shift (description__-__shift+w.sh)
control + alt (description__-__control+alt+w.sh)

1.2.2 Key
<Key char> is a single character. It is not optional.
d.sh uses orca + d as shortcut. The <char> has to be always the last character in 
The file name before the extension starts.

1.2.3 Commands and Plugin settings
with <command> you could control the behavior of the plugins. you could add more than one command. the order is optional. 
startnotify = announce "start <description>" before the plugin is executed. this useful as feedback for 
commands with longer progress times.
stopnotify = announce "finish <description>". This is useful as feedback for plugins with no output.
blockcall = don't start plugin in a thread, be careful, this locks orca until the plugin is finish
showstderr = not only show stdout but also stderr
parameters <parameter1> [parameter2] [parameter3]... = passes the parameters to the plugin

1.3 File content:
Just normal shell, Perl, python  scripts. orca will read the STD out (examples included)
be sure that the execution permission is set with
chmod +x <youplugin>
basic plugin example for hello world while pressing ORCA+y:
<example Hello_world__-__y.sh >
#!/bin/sh
echo "Hello World"
</example Hello_world__-__y.sh >

2 Administration
2.1 Folders
~/.config/SOPS/plugins-available:
here you could put your own plugins.
/usr/share/SOPS/plugins-available:
this contains the default plugins and the administration tools.
~/.config/SOPS/plugins-enabled:
contains the enabled (active) plugin. this folder will be read by orca.

2.2 Administration tools
The tools are located in the "tools" folder 
./ensop <pluginname> #enables an plugin so its active
./dissop <pluginname> #disable the plugin, its not loaded anymore.
They basicaly just create links in ~./.config/SOPSP/plugins-enabled and make the plugins executable.
To reload the plugins in orca, you have to restart orca

3. Hosting
I you want to Host plugins see:
SOPS/tools/hosting.txt
